---
import { getCollection } from "astro:content";
import type {CollectionEntry} from "astro:content";
import type { episodeSchema } from "@content/config";
import EpisodeLayout from "@layouts/EpisodeLayout.astro";
import AudioPlayer from "@components/audioPlayer.astro";
import PlainTextRenderer from "marked-plaintext";
import { marked } from "marked";
import { Image } from "astro:assets";
import defaultCoverImage from "@assets/cover.jpg"

export async function getStaticPaths() {
  const postEntries = await getCollection("episode");
  return postEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"episode">;
}

const { entry } = Astro.props;
const episode: episodeSchema = entry.data;
const { Content } = await entry.render();

const renderer = new PlainTextRenderer();
const description = marked.parse(entry.body.slice(0, 500), { renderer: renderer }).slice(0, 200);
---

<EpisodeLayout
  title={episode.title}
  pubDate={episode.pubDate}
  cover={episode.cover}
  explicit={episode.explicit}
  description={description}
>
  <Image src={defaultCoverImage} alt={episode.title} format="webp" class="shadow-lg rounded-md w-[4.5rem] h-[4.5rem] md:w-24 md:h-24" format="webp" transition:name="cover_img" width={defaultCoverImage.width} height={defaultCoverImage.height} />
  <Content />
</EpisodeLayout>

<AudioPlayer />

<script define:vars={{ episode }}>
const musicPlayer = document.getElementById("audio-player-container");
const audioDownloadLink = document.getElementById("audio-download-link");
const audioControl = document.getElementById("audio-control");
const audioLoading = document.getElementById("audio-loading");
const footer = document.querySelector(".footer > div");

musicPlayer?.classList.remove("hidden", "opacity-0");
musicPlayer?.classList.add("flex");
const audio = document.querySelector("audio");
audio.src = episode.audioUrl;
audioLoading?.classList.remove("hidden");
audioControl?.classList.add("hidden");
footer?.classList.add('pb-24');
audioDownloadLink.href = episode.audioUrl;
</script>
